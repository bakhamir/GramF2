import React, { useState } from 'react';
import './App.css';

function App() {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [password, setPassword] = useState('');
  const [content, setContent] = useState('');
  const [messages, setMessages] = useState([]);
  const [token, setToken] = useState(null);
  const [loggedIn, setLoggedIn] = useState(false);

  // üîê –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  const register = () => {
    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å: POST /auth/register
    // fetch('/auth/register', { method: 'POST', body: ... })
    console.log("–≠–º—É–ª—è—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏");
    setToken("fake-jwt-token");
    setLoggedIn(true);
  };

  // üîê –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ª–æ–≥–∏–Ω–∞
  const login = () => {
    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å: POST /auth/login
    // fetch('/auth/login', { method: 'POST', body: ... }) ‚Üí –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω
    console.log("–≠–º—É–ª—è—Ü–∏—è –ª–æ–≥–∏–Ω–∞");
    setToken("fake-jwt-token");
    setLoggedIn(true);
    loadMessages(); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  };

  // üí¨ –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const loadMessages = () => {
    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å: GET /messages/get?senderId=X&receiverId=Y
    console.log("–≠–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π");
    setMessages([
      { id: 1, sender: "–í—ã", content: "–ü—Ä–∏–≤–µ—Ç!" },
      { id: 2, sender: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", content: "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?" }
    ]);
  };

  // üì§ –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  const sendMessage = () => {
    // –¢—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—Ä–æ—Å: POST /messages/send
    console.log("–≠–º—É–ª—è—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
    const newMessage = {
      id: Date.now(),
      sender: "–í—ã",
      content
    };
    setMessages([...messages, newMessage]);
    setContent('');
  };

  if (!loggedIn) {
    return (
      <div className="container">
        <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</h1>
        <input
          type="text"
          placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
          value={phoneNumber}
          onChange={(e) => setPhoneNumber(e.target.value)}
        />
        <input
          type="password"
          placeholder="–ü–∞—Ä–æ–ª—å"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <button onClick={register}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
        <button onClick={login}>–í–æ–π—Ç–∏</button>
      </div>
    );
  }

  return (
    <div className="container">
      <h1>–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä</h1>
      <div>
        <ul>
          {messages.map(msg => (
            <li key={msg.id}><strong>{msg.sender}:</strong> {msg.content}</li>
          ))}
        </ul>
        <input
          type="text"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          value={content}
          onChange={(e) => setContent(e.target.value)}
        />
        <button onClick={sendMessage}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
      </div>
    </div>
  );
}

export default App;
